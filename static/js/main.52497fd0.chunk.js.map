{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","TodoList","todos","map","item","getUser","userId","usersFromServer","find","App","useState","setTitle","selectedUser","setSelectedUser","newTodos","setNewTodos","errorEmptyTitle","setErrorEmptyTitle","errorEmptyselectedUser","seterrorEmptyselectedUser","onSubmit","event","preventDefault","correctTitle","i","length","toLocaleLowerCase","toLocaleUpperCase","Number","isInteger","newTodo","Math","max","arr","correctionTodo","action","method","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52497fd0.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={todo.completed\n        ? 'TodoInfo TodoInfo--completed'\n        : 'TodoInfo'}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    { todos.map(item => (\n      <TodoInfo todo={item} key={item.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [newTodos, setNewTodos] = useState(todos);\n  const [errorEmptyTitle, setErrorEmptyTitle] = useState(false);\n  const [errorEmptyselectedUser, seterrorEmptyselectedUser] = useState(false);\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const correctionTodo = (title: string, selectedUser: number) => {\n    let correctTitle = '';\n\n    if (title) {\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < title.length; i++) {\n        if ((title[i].toLocaleLowerCase() !== title[i].toLocaleUpperCase())\n          || Number.isInteger(+title[i])) {\n          correctTitle += title[i];\n        }\n      }\n    }\n\n    const newTodo = {\n      title: correctTitle,\n      userId: selectedUser,\n      id: Math.max(...newTodos.map(todo => todo.id)) + 1,\n      completed: false,\n      user: getUser(selectedUser),\n    };\n\n    setNewTodos(arr => [...arr, newTodo]);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title && selectedUser) {\n      correctionTodo(title, selectedUser);\n      setTitle('');\n      setSelectedUser(0);\n\n      return;\n    }\n\n    setErrorEmptyTitle(true);\n    seterrorEmptyselectedUser(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        onSubmit={handleSubmit}\n        action=\"/api/users\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <label>{'Title: '}</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={\n              (event) => {\n                setTitle(event.target.value);\n                setErrorEmptyTitle(false);\n              }\n            }\n          />\n          {errorEmptyTitle\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>{'User: '}</label>\n          <select\n            name=\"selectedUser\"\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={(event) => {\n              setSelectedUser(+event.target.value);\n              seterrorEmptyselectedUser(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {errorEmptyselectedUser\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}